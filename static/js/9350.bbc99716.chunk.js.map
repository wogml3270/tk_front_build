{"version":3,"file":"static/js/9350.bbc99716.chunk.js","mappings":"6ZA+JA,EAlJmB,WACjB,OAAoCA,EAAAA,EAAAA,WAAS,GAAM,eAA3CC,EAAS,KAAEC,EAAY,KAC/B,GAA8BC,EAAAA,EAAAA,KAAW,eAAjCC,EAAQ,KAAEC,EAAO,KAEnBC,EAAO,CAAEC,YAAa,GAAIC,WAAY,GAAIC,SAAU,GAAIC,OAAQ,IACtE,GAAwBV,EAAAA,EAAAA,UAAS,CAACM,IAAM,eAAjCK,EAAI,KAAEC,EAAO,KAQdC,EAAe,SAACC,GACpB,IAAMC,EAAOD,EAAEE,cAATD,GACFE,EAAON,EAAKO,QAAO,SAACC,EAAGC,GACzB,OAAOL,GAAMK,CACf,IACAR,EAAQK,EACV,EAEMI,EAAe,SAACP,GACpB,MAA0BA,EAAEE,cAAtBD,EAAE,EAAFA,GAAIO,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACZN,GAAI,OAAON,GACfM,EAAKF,IAAG,kBAAQE,EAAKF,IAAG,cAAGO,EAAOC,IAClCX,EAAQK,EACV,EAEMO,EAAe,SAACV,EAAGW,GACvB,MAAsBX,EAAEY,OAAlBJ,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACRN,GAAI,OAAON,GACfM,EAAKQ,IAAM,kBAAQR,EAAKQ,IAAM,cAAGH,EAAOC,IACxCX,EAAQK,EACV,EAWA,OACE,UAAC,IAAqB,CAACU,MAAM,4BAAQvB,SAAUA,EAAUwB,SAAUvB,EAAQ,WACzE,gBAAKwB,UAAU,YAAW,UACxB,SAACC,EAAA,EAAS,CAAC7B,UAAWA,EAAWC,aAAcA,MAG/CD,GACA8B,EAAAA,SAAAA,QACM,OAAJpB,QAAI,IAAJA,OAAI,EAAJA,EAAMqB,KAAI,SAACC,EAAMR,GAAK,OACpB,iBAAKI,UAAU,YAAW,UACb,IAAVJ,IACC,iCACE,gBAAKI,UAAU,qDACf,gBAAKA,UAAU,uBAAsB,UACnC,SAACK,EAAA,EAAU,CAACnB,GAAE,UAAKU,GAASI,UAAU,YAAYM,QAAStB,EAAa,SAAC,uBAO/E,iBAAKgB,UAAU,8CAA6C,WAC1D,SAAC,IAAW,CAACA,UAAU,wBAAuB,SAAC,wBAC/C,SAAC,IAAa,CACZd,GAAE,UAAKU,GACPH,KAAK,cACLc,YAAY,kCACZb,MAAOU,EAAK1B,aAAe,GAC3BqB,SAAUP,EACVgB,GAAI,CAAE,wBAAyB,CAAEC,OAAQ,OAAQC,MAAO,gBAI5D,iBAAKV,UAAU,oBAAmB,WAChC,SAAC,IAAW,CAACA,UAAU,oCAAmC,SAAC,+BAC3D,iBAAKA,UAAU,kBAAiB,WAC9B,SAACW,EAAA,EAAY,CACXzB,GAAE,UAAKU,GACPH,KAAK,wBACLmB,OAAQ,IAERlB,MAAOU,EAAKS,uBAAyB,GACrCd,SAAU,SAACd,GAAC,OAAKU,EAAaV,EAAGW,EAAM,KAEzC,kBAAOF,MAAOU,EAAKS,uBAAyB,GAAIpB,KAAK,wBAAwBqB,QAAM,EAACC,UAAQ,IAAE,KAE9F,SAACJ,EAAA,EAAY,CACXzB,GAAE,UAAKU,GACPH,KAAK,sBACLmB,OAAQ,IAERlB,MAAOU,EAAKY,qBAAuB,GACnCjB,SAAU,SAACd,GAAC,OAAKU,EAAaV,EAAGW,EAAM,KAEzC,kBAAOF,MAAOU,EAAKY,qBAAuB,GAAIvB,KAAK,sBAAsBqB,QAAM,EAACC,UAAQ,YAiCxF,KAIV3C,IACA,gBAAK4B,UAAU,wBAAuB,UACpC,SAACiB,EAAA,EAAW,CAACX,QAhIH,SAACrB,GACjBF,EAAQ,GAAD,eAAKD,GAAI,CAAEL,IACpB,EA8HyCuB,UAAU,cAAa,SAAC,oCAOnE,E,yJCgHA,EAlP8B,WAC5B,IAAMkB,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,IAAeC,EAAAA,GAAa,eAArDC,EAAQ,KAAEC,EAAW,KAG5B,GAA8BC,EAAAA,EAAAA,IAAY,SAACC,GAAI,OAAKC,EAAAA,EAAAA,IAAgBD,EAAK,IAAjEE,EAAM,EAANA,OAAQC,EAAS,EAATA,UAoKhB,GAA8BzD,EAAAA,EAAAA,WAAS,GAAM,eAAtC0D,EAAO,KAAEC,EAAU,KAE1B,GAAwB3D,EAAAA,EAAAA,UAAS,IAAG,eAA5B4D,EAAG,KAAEC,EAAM,KACnB,GAAqDC,EAAAA,EAAAA,GAAa,CAChEC,KAAMH,EACNI,OAAQ,aACRC,QAAS,MACTC,IAAKL,IACL,eALKM,EAAe,KAAEC,EAAY,KAAEC,EAAW,KASjD,OACE,iCACA,SAACC,EAAA,EAAM,KACL,UAACC,EAAA,EAAa,CAAChC,MAAM,KAAI,WAEvB,SAACiC,EAAA,EAAU,CAACC,QAAQ,KAAK5C,UAAU,sBAAqB,SAAC,kDAIzD,iBAAKA,UAAU,YAAW,WACxB,iBAAKA,UAAU,gDAA+C,WAC5D,SAAC6C,EAAA,EAAY,CACXC,KAAK,QACLC,WAAe,OAAHhB,QAAG,IAAHA,OAAG,EAAHA,EAAKgB,WACjBhD,SAAUuC,EACVU,IAAKT,EACLU,MAAI,KAEN,SAACC,EAAA,EAAoB,CACnB5C,QAASkC,EACTxC,UAAU,kDAGd,SAACmD,EAAA,EAAS,KAEV,SAACC,EAAA,EAAQ,KAET,SAACC,EAAA,EAAW,CAACC,UAAQ,KAErB,SAACC,EAAA,EAAkB,KAInB,SAAC,EAAU,KAEX,SAACC,EAAA,EAAa,QAGhB,iBAAKxD,UAAU,uCAAsC,UAAC,2IACtB,kBAAM,wEAItC,iBAAKA,UAAU,sDAAqD,WAClE,SAACyD,EAAA,EAAW,CAACzD,UAAU,iCAAiCM,QAAS,kBAAMY,EAAS,UAAU,EAAC,SAAC,8BAG5F,SAACwC,EAAA,EAAY,CAAC1D,UAAU,iCAAiCM,QA5N5C,SAAArB,GA4BnB,IA5ByB,IAAD,8BAGpB0E,EAAoC,QAAjC,EAAGC,SAASC,eAAe,cAAM,aAA9B,EAAgCnE,MACtCoE,EAAoD,gBAA9CF,SAASC,eAAe,OAAOE,YAAsB,IAAoD,gBAA9CH,SAASC,eAAe,OAAOE,YAAsB,IAAM,GAG5HC,EAAoD,QAAzC,EAAGJ,SAASC,eAAe,sBAAc,aAAtC,EAAwCnE,MACtDuE,EAA0D,QAA5C,EAAGL,SAASC,eAAe,yBAAiB,aAAzC,EAA2CnE,MAC5DwE,EAA+B,OAAdD,QAAc,IAAdA,OAAc,EAAdA,EAAgBE,MAAM,EAAE,GACzCC,EAAkBC,OAAqB,OAAdJ,QAAc,IAAdA,OAAc,EAAdA,EAAgBE,MAAM,EAAE,IACjDG,EAA0D,QAA5C,EAAGV,SAASC,eAAe,yBAAiB,aAAzC,EAA2CnE,MAC5D6E,EAA+B,OAAdD,QAAc,IAAdA,OAAc,EAAdA,EAAgBH,MAAM,EAAE,GACzCK,EAAkBH,OAAqB,OAAdC,QAAc,IAAdA,OAAc,EAAdA,EAAgBH,MAAM,EAAE,IACjDM,EAAwC,QAAnC,EAAGb,SAASC,eAAe,gBAAQ,aAAhC,EAAkCnE,MAC1CgF,EAA0C,QAApC,EAAGd,SAASC,eAAe,iBAAS,aAAjC,EAAmCnE,MAC5CiF,EAAsD,QAA1C,EAAGf,SAASC,eAAe,uBAAe,aAAvC,EAAyCE,YAIxDa,EAAwC,QAAnC,EAAGhB,SAASC,eAAe,gBAAQ,aAAhC,EAAkCE,YAC1Cc,EAA8D,QAA9C,EAAGjB,SAASC,eAAe,2BAAmB,aAA3C,EAA6CnE,MAChEoF,EAA8E,QAAtD,EAAGlB,SAASC,eAAe,mCAA2B,aAAnD,EAAqDE,YAChFgB,EAAgF,QAAvD,EAAGnB,SAASC,eAAe,oCAA4B,aAApD,EAAsDnE,MAGlFsF,EAA4D,QAA7C,EAAGpB,SAASqB,kBAAkB,uBAAe,aAA1C,EAA4CrE,OAC9DsE,EAAgB,GACXC,EAAE,EAAGA,EAAIH,EAAiBG,IAAK,CAAC,IAAD,MAClC/F,EAAO,CACTgG,aAA2D,QAA/C,EAAExB,SAASqB,kBAAkB,gBAAgBE,UAAE,aAA7C,EAA+CzF,MAC7D2F,cAA6D,QAAhD,EAAEzB,SAASqB,kBAAkB,iBAAiBE,UAAE,aAA9C,EAAgDzF,MAC/D4F,eAA+D,QAAjD,EAAE1B,SAASqB,kBAAkB,kBAAkBE,UAAE,aAA/C,EAAiDzF,OAEnEwF,EAAcK,KAAKnG,EACrB,CAKA,IAFA,IAAIoG,EAAwD,QAA5C,EAAG5B,SAASqB,kBAAkB,sBAAc,aAAzC,EAA2CrE,OAC1D6E,EAAa,GACRN,EAAE,EAAGA,EAAIK,EAAcL,IAAK,CAAC,IAAD,MAC/BO,GAAkE,QAAzD,EAAG9B,SAASqB,kBAAkB,yBAAyBE,UAAE,aAAtD,EAAwDzF,MACpEiG,GAA8D,QAAvD,EAAG/B,SAASqB,kBAAkB,uBAAuBE,UAAE,aAApD,EAAsDzF,MAEhEN,GAAO,CACTV,YAAyD,QAA9C,EAAEkF,SAASqB,kBAAkB,eAAeE,UAAE,aAA5C,EAA8CzF,MAC3DkG,sBAAgC,OAATF,SAAS,IAATA,QAAS,EAATA,GAAWvB,MAAM,EAAE,GAC1C0B,uBAAwBxB,OAAgB,OAATqB,SAAS,IAATA,QAAS,EAATA,GAAWvB,MAAM,EAAE,IAClD2B,oBAA4B,OAAPH,SAAO,IAAPA,QAAO,EAAPA,GAASxB,MAAM,EAAE,GACtC4B,qBAAsB1B,OAAc,OAAPsB,SAAO,IAAPA,QAAO,EAAPA,GAASxB,MAAM,EAAE,KAEhDsB,EAAWF,KAAKnG,GAClB,CAGA,GAAoB,KAAhB4E,EAAoB,OAAOgC,MAAM,kEACrC,GAAuB,KAAnB/B,EAAuB,OAAO+B,MAAM,wEACxC,GAAuB,KAAnB1B,EAAuB,OAAO0B,MAAM,wEACxC,GAAc,KAAVvB,EAAc,OAAOuB,MAAM,4DAC/B,GAAe,KAAXtB,EAAe,OAAOsB,MAAM,4DAChC,GAAqB,KAAjBrB,EAAqB,OAAOqB,MAAM,4DAEtC,GAAY,KAARrC,EAIJ,GAAY,KAARG,EAIJ,GAAc,KAAVc,EAIJ,GAAyB,KAArBC,EAIJ,GAAiC,KAA7BC,EAIJ,GAAkC,KAA9BC,EAAJ,CAcA,IAAIkB,GAA0D,QAA5C,EAAGrC,SAASC,eAAe,yBAAiB,aAAzC,EAA2CnE,MAC5DwG,GAAwF,QAA3D,EAAGtC,SAASC,eAAe,wCAAgC,aAAxD,EAA0DnE,MAG9F,GAAY,OAAR4B,QAAQ,IAARA,GAAAA,EAAUpC,GAAI,CAChB,IAAIE,GAAO,CACT+G,KAAc,OAAR7E,QAAQ,IAARA,OAAQ,EAARA,EAAUpC,GAChByE,IAAKA,EACLG,IAAKA,EACLE,YAAaA,EACbE,eAAgBA,EAChBE,gBAAiBA,EACjBG,eAAgBA,EAChBC,gBAAiBA,EACjBC,MAAOA,EACPC,OAAQA,EACRC,aAAcA,EACdC,MAAOA,EACPC,iBAAkBA,EAClBC,yBAA0BA,EAC1BC,0BAA2BA,GAGvB7C,GAAO,GAGb,GAFAA,GAAKqD,KAAI,MAATrD,IAAI,OAASkE,OAAOC,QAAQjH,MAExB6G,IAAkBC,GAA+B,CACnD,IAAII,GAAOJ,GACPK,GAAgCD,GAAKnC,MAAM,EAAE,GAC7CqC,GAAiCnC,OAAOiC,GAAKnC,MAAM,EAAE,IACzDjC,GAAKqD,KAAK,CAAC,iBAAkBU,KAC7B/D,GAAKqD,KAAK,CAAC,gCAAiCgB,KAC5CrE,GAAKqD,KAAK,CAAC,iCAAkCiB,IAC/C,CAEyB,GAArBf,EAAW7E,QACbsB,GAAKqD,KAAK,CAAC,oBAAqBkB,KAAKC,UAAUjB,KAGrB,GAAxBP,EAActE,QAChBsB,GAAKqD,KAAK,CAAC,qBAAsBkB,KAAKC,UAAUxB,KAG3C,OAAHnD,QAAG,IAAHA,GAAAA,EAAKA,KACPG,GAAKqD,KAAK,CAAC,MAAOxD,EAAIA,MAGxB,IAAM4E,IAAWC,EAAAA,EAAAA,GAAY1E,IAG7BP,EAAOgF,GAAU,CACfE,UAAW,SAACC,GACVhF,GAAW,GACXP,GAAY,kBAAKD,GAAQ,IAAEyF,UAAW,KACtCC,WAAW9F,EAAS,kBAAmB,KACzC,EACA+F,QAAS,SAACC,GACRlB,MAAMkB,EAAIC,SAASjF,KAAKkF,QAC1B,GAEJ,CAvEA,MAFEpB,MAAM,iGAJNA,MAAM,8EAJNA,MAAM,6EAJNA,MAAM,iGAJNA,MAAM,iEAJNA,MAAM,uEAgGV,EA6DwFqB,SAAUxF,GAAWD,EAAU,SAAC,uBAOlHA,GAAaC,IAAW,SAACyF,EAAA,EAAY,MAK7C,C","sources":["pages/UserDojang/Registration/Sabum/CareerType.jsx","pages/UserDojang/Registration/Sabum/SabumInfoRegistration.jsx"],"sourcesContent":["import { Checkbox, FormControl, FormControlLabel, FormGroup, Radio } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport BlackBtnMD from '../../../../components/UI/Atoms/Button/BlackBtnMD';\r\nimport CreateBtnMD from '../../../../components/UI/Atoms/Button/CreateBtnMD';\r\nimport CareerBtn from '../../../../components/UI/Atoms/ButtonGroup/CareerBtn';\r\nimport DatepickerSM from '../../../../components/UI/Atoms/Datepicker/DatepickerSM';\r\nimport InfoLabelMD from '../../../../components/UI/Atoms/Info/InfoLabelMD';\r\nimport InfoEditInput from '../../../../components/UI/Atoms/Input/InfoEditInput';\r\nimport { useDebug } from '../../../../hooks/basic/useDebug';\r\nimport RegistrationAccordion from '../RegistrationAccordion';\r\nimport { useToggle } from '../../../../hooks/basic/useToggle';\r\nimport BlackBtnSM from '../../../../components/UI/Atoms/Button/BlackBtnSM';\r\n\r\nconst CareerType = () => {\r\n  const [ alignment, setAlignment ] = useState(false)\r\n  const [ expanded, Control ] = useToggle()\r\n\r\n  const form = { dojang_name: '', start_date: '', end_date: '', status: '' };\r\n  const [list, setList] = useState([form]);\r\n\r\n\r\n  // handler\r\n  const handleAdd = (e) => {\r\n    setList([...list, form]);\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    let { id } = e.currentTarget;\r\n    let temp = list.filter((v, idx) => {\r\n      return id != idx;\r\n    });\r\n    setList(temp);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    let { id, name, value } = e.currentTarget;\r\n    let temp = [...list];\r\n    temp[id] = { ...temp[id], [name]: value };\r\n    setList(temp);\r\n  };\r\n\r\n  const handleSelect = (e, index) => {\r\n    let { name, value } = e.target;\r\n    let temp = [...list];\r\n    temp[index] = { ...temp[index], [name]: value };\r\n    setList(temp);\r\n  };\r\n\r\n  const handleCheck = (e, index) => {\r\n    let { name, value } = e.target;\r\n    let temp = [...list];\r\n    temp[index] = { ...temp[index], [name]: value };\r\n    setList(temp);\r\n  };\r\n\r\n  // useDebug(list);\r\n\r\n  return (\r\n    <RegistrationAccordion title='사범 경력' expanded={expanded} onChange={Control}>\r\n      <div className=\"mb-[30px]\">\r\n        <CareerBtn alignment={alignment} setAlignment={setAlignment}/>\r\n      </div>\r\n\r\n      { alignment &&\r\n        React.Children.toArray(\r\n          list?.map((item, index) => \r\n            <div className='mb-[20px]'>\r\n              {index !== 0 && (\r\n                <>\r\n                  <div className=\"w-full h-[1px] bg-[#aaaaaa] mt-[10px] mb-[20px]\"></div>\r\n                  <div className=\"text-right mb-[10px]\">\r\n                    <BlackBtnSM id={`${index}`} className=\"mb-[10px]\" onClick={handleDelete}>\r\n                      삭제\r\n                    </BlackBtnSM>\r\n                  </div>\r\n                </>\r\n              )}\r\n\r\n              <div className=\"flex items-center justify-between mb-[10px]\">\r\n                <InfoLabelMD className=\"text-[17px] flex-none\">도장명</InfoLabelMD>\r\n                <InfoEditInput\r\n                  id={`${index}`}\r\n                  name=\"dojang_name\"\r\n                  placeholder=\"도장명 입력\"\r\n                  value={item.dojang_name || ''}\r\n                  onChange={handleChange}\r\n                  sx={{ '& .MuiInputBase-input': { height: '30px', width: '335px' } }}\r\n                ></InfoEditInput>\r\n              </div>\r\n\r\n              <div className=\"flex items-center\">\r\n                <InfoLabelMD className=\"text-[16px] w-[111.5px] flex-none\">재직 기간</InfoLabelMD>\r\n                <div className=\"flex gap-[10px]\">\r\n                  <DatepickerSM\r\n                    id={`${index}`}\r\n                    name=\"employment_start_date\"\r\n                    length={125}\r\n                    // placeholder={'입학년월'}\r\n                    value={item.employment_start_date || ''}\r\n                    onChange={(e) => handleSelect(e, index)}\r\n                  ></DatepickerSM>\r\n                  <input value={item.employment_start_date || ''} name='employment_start_date' hidden readOnly/>\r\n                  ~\r\n                  <DatepickerSM\r\n                    id={`${index}`}\r\n                    name=\"employment_end_date\"\r\n                    length={125}\r\n                    // placeholder={'졸업년월'}\r\n                    value={item.employment_end_date || ''}\r\n                    onChange={(e) => handleSelect(e, index)}\r\n                  ></DatepickerSM>\r\n                  <input value={item.employment_end_date || ''} name='employment_end_date' hidden readOnly/>\r\n                </div>\r\n              </div>\r\n\r\n              {/* <div className=\"flex ml-[111px] gap-[10px]\">\r\n                <div>\r\n                  <FormControl>\r\n                    <FormGroup>\r\n                      <FormControlLabel\r\n                        id={`${index}`}\r\n                        name=\"status\"\r\n                        value=\"재직중\"\r\n                        sx={{ '& .MuiFormControlLabel-label': { fontSize: '15px' } }}\r\n                        className=\"mr-0\"\r\n                        control={<Radio />}\r\n                        label=\"재직중\"\r\n                        onChange={(e) => handleCheck(e, index)}\r\n                      />\r\n                      <FormControlLabel\r\n                        id={`${index}`}\r\n                        name=\"status\"\r\n                        value=\"퇴사\"\r\n                        sx={{ '& .MuiFormControlLabel-label': { fontSize: '15px' } }}\r\n                        className=\"mr-0\"\r\n                        control={<Radio />}\r\n                        label=\"퇴사\"\r\n                        onChange={(e) => handleCheck(e, index)}\r\n                      />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </div>\r\n\r\n              </div> */}\r\n            </div>\r\n          )\r\n        )\r\n      }\r\n      { alignment &&\r\n        <div className=\"text-center mt-[30px]\">\r\n          <CreateBtnMD onClick={handleAdd} className=\"text-[14px]\">\r\n            + 경력 추가\r\n          </CreateBtnMD>\r\n        </div>\r\n      }\r\n    </RegistrationAccordion>\r\n  );\r\n};\r\n\r\nexport default CareerType;\r\n","// import { MenuItem, TextField } from '@mui/material';\r\nimport { Typography } from '@mui/material';\r\nimport React, { useRef, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PageContainer from '../../../../components/layout/PageContainer';\r\nimport SecondBtnSM from '../../../../components/UI/Atoms/Button/SecondBtnSM';\r\nimport PrimaryBtnSM from '../../../../components/UI/Atoms/Button/PrimaryBtnSM';\r\nimport UnivInfo from './UnivInfo';\r\nimport ExtraCertification from './ExtraCertification';\r\nimport CareerType from './CareerType';\r\nimport DriverLicense from './DriverLicense';\r\nimport Certificate from '../Common/Certificate';\r\nimport TKCareer from './TKCareer'\r\nimport Header from '../../../../components/layout/Header';\r\nimport { useMutation } from '@tanstack/react-query';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport userInfoAtom from '../../../../recoil/atom/login/userInfoAtom';\r\nimport ProfileImage from '../../../../components/UI/Atoms/Profile/ProfileImage';\r\nimport { useFileInput } from '../../../../hooks/file/useFileInput';\r\nimport ProfileEditUploadBtn from '../../../../components/UI/Atoms/Icon/ProfileEditUploadBtn';\r\nimport BasicInfo from '../Common/BasicInfo';\r\nimport LoadingModal from '../../../../components/UI/Atoms/Spinner/LoadingModal';\r\nimport { createSabumInfo } from '../../../../api/Sabum/sabum';\r\nimport { getFormData } from '../../../../utils/basic/getFormData';\r\nimport { formDataDebug } from '../../../../utils/debug/debug';\r\n\r\n\r\nconst SabumInfoRegistration = () => {\r\n  const navigate = useNavigate();\r\n  const [userInfo, setUserInfo] = useRecoilState(userInfoAtom)\r\n\r\n  // query\r\n  const { mutate, isLoading } = useMutation((body) => createSabumInfo(body))\r\n\r\n  // handler\r\n  const handleSubmit = e => {\r\n\r\n    // basicInfo\r\n    let dob = document.getElementById('dob')?.value\r\n    let sex = document.getElementById('sex').textContent == '남자' ? '1' : document.getElementById('sex').textContent == '여자' ? '2' : ''\r\n\r\n    // univInfo\r\n    let school_name = document.getElementById('school_name')?.value\r\n    let admission_date = document.getElementById('admission_date')?.value\r\n    let admission_year = admission_date?.slice(0,4)\r\n    let admission_month = Number(admission_date?.slice(5,7))\r\n    let graduated_date = document.getElementById('graduated_date')?.value\r\n    let graduated_year = graduated_date?.slice(0,4)\r\n    let graduated_month = Number(graduated_date?.slice(5,7))\r\n    let major = document.getElementById('major')?.value\r\n    let grades = document.getElementById('grades')?.value\r\n    let total_grades = document.getElementById('total_grades')?.textContent\r\n    \r\n    \r\n    // certificate\r\n    let level = document.getElementById('level')?.textContent\r\n    let tkd_level_number = document.getElementById('tkd_level_number')?.value\r\n    let instructor_license_grade = document.getElementById('instructor_license_grade')?.textContent\r\n    let instructor_license_number = document.getElementById('instructor_license_number')?.value\r\n\r\n    // extraCertification\r\n    let otherCertLength = document.getElementsByName('license_name')?.length\r\n    let otherCertList = []\r\n    for (let i=0; i < otherCertLength; i++) {\r\n      let temp = {\r\n        license_name: document.getElementsByName('license_name')[i]?.value,\r\n        license_grade: document.getElementsByName('license_grade')[i]?.value,\r\n        license_number: document.getElementsByName('license_number')[i]?.value,\r\n      }\r\n      otherCertList.push(temp)\r\n    }\r\n\r\n    // CareerType\r\n    let careerLength = document.getElementsByName('dojang_name')?.length\r\n    let careerList = []\r\n    for (let i=0; i < careerLength; i++) {\r\n      let startDate = document.getElementsByName('employment_start_date')[i]?.value\r\n      let endDate = document.getElementsByName('employment_end_date')[i]?.value\r\n\r\n      let temp = {\r\n        dojang_name: document.getElementsByName('dojang_name')[i]?.value,\r\n        employment_start_year: startDate?.slice(0,4),\r\n        employment_start_month: Number(startDate?.slice(5,7)),\r\n        employment_end_year: endDate?.slice(0,4),\r\n        employment_end_month: Number(endDate?.slice(5,7)),\r\n      }\r\n      careerList.push(temp)\r\n    }\r\n\r\n    // values값들이 빈 스트링이면 alert창 띄우면서 return\r\n    if (school_name === '') return alert('학교명을 입력해주세요.') \r\n    if (admission_date === '') return alert('재학기간을 입력해주세요.') \r\n    if (graduated_date === '') return alert('재학기간을 입력해주세요.') \r\n    if (major === '') return alert('전공을 입력해주세요.')\r\n    if (grades === '') return alert('학점을 입력해주세요.')\r\n    if (total_grades === '') return alert('학점을 입력해주세요.')\r\n\r\n    if (dob === '') {\r\n      alert('생년월일을 입력해주세요.');\r\n      return;\r\n    }\r\n    if (sex === '') {\r\n      alert('성별을 선택해주세요.');\r\n      return;\r\n    }\r\n    if (level === '') {\r\n      alert('보유 단증의 등급을 선택해주세요.');\r\n      return;\r\n    }\r\n    if (tkd_level_number === '') {\r\n      alert('단증번호를 입력해주세요.');\r\n      return;\r\n    }\r\n    if (instructor_license_grade === '') {\r\n      alert('사범 등급을 선택해주세요.');\r\n      return;\r\n    }\r\n    if (instructor_license_number === '') {\r\n      alert('사범 자격증 번호를 입력해주세요.');\r\n      return;\r\n    }\r\n    // if ((otherCertLength > 0) && ((otherCertList?.license_name === '') || (otherCertList?.license_grade === '') || (otherCertList?.license_number === '')) ) {\r\n    //   alert('기타 단증 정보를 입력해주세요.');\r\n    //   return;\r\n    // }\r\n    // if ((careerLength > 0 ) && ((careerLength?.dojang_name === '') || (careerLength?.employment_start_year === '') || (careerLength?.employment_end_year === '')))  {\r\n    //   alert('도장 운영 경력을 입력해주세요.');\r\n    //   return;\r\n    // }\r\n    \r\n    // driverLicense\r\n    let driver_license = document.getElementById('driver_license')?.value\r\n    let driver_license_obtaining_date = document.getElementById('driver_license_obtaining_date')?.value\r\n\r\n\r\n    if (userInfo?.id) {\r\n      let temp = {\r\n        user: userInfo?.id,\r\n        dob: dob,\r\n        sex: sex,\r\n        school_name: school_name,\r\n        admission_year: admission_year,\r\n        admission_month: admission_month,\r\n        graduated_year: graduated_year,\r\n        graduated_month: graduated_month,\r\n        major: major,\r\n        grades: grades,\r\n        total_grades: total_grades,\r\n        level: level,\r\n        tkd_level_number: tkd_level_number,\r\n        instructor_license_grade: instructor_license_grade,\r\n        instructor_license_number: instructor_license_number,\r\n      }\r\n\r\n      const data = []\r\n      data.push(...Object.entries(temp))\r\n\r\n      if (driver_license && driver_license_obtaining_date) {\r\n        let date = driver_license_obtaining_date\r\n        let driver_license_obtaining_year = date.slice(0,4)\r\n        let driver_license_obtaining_month = Number(date.slice(5,7))\r\n        data.push(['driver_license', driver_license])\r\n        data.push(['driver_license_obtaining_year', driver_license_obtaining_year])\r\n        data.push(['driver_license_obtaining_month', driver_license_obtaining_month])\r\n      }\r\n\r\n      if (careerList.length != 0) {\r\n        data.push(['sabum_career_info', JSON.stringify(careerList)])\r\n      }\r\n      \r\n      if (otherCertList.length != 0) {\r\n        data.push(['sabum_license_info', JSON.stringify(otherCertList)])\r\n      }\r\n\r\n      if (img?.img) {\r\n        data.push(['img', img.img])\r\n      }\r\n      \r\n      const formData = getFormData(data)\r\n      // formDataDebug(formData)\r\n\r\n      mutate(formData, {\r\n        onSuccess: (res) => {\r\n          setLoading(true)\r\n          setUserInfo({ ...userInfo, is_linked: 1 })\r\n          setTimeout(navigate('/select/dojang'), 1500)\r\n        },\r\n        onError: (err) => {\r\n          alert(err.response.data.message)\r\n        }\r\n      })\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const [ img, setImg ] = useState('')\r\n  const [handleFileInput, fileInputRef, clickUpload] = useFileInput({\r\n    data: img,\r\n    urlKey: 'previewUrl',\r\n    fileKey: 'img',\r\n    set: setImg,\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <Header />\r\n      <PageContainer width=\"sm\">\r\n\r\n        <Typography variant=\"h2\" className=\"mt-[25px] mb-[50px]\">\r\n          사범님 정보 등록\r\n        </Typography>\r\n\r\n        <div className='w-[500px]'>\r\n          <div className=\"flex flex-col items-center relative mb-[30px]\">\r\n            <ProfileImage\r\n              size=\"140px\"\r\n              previewUrl={img?.previewUrl}\r\n              onChange={handleFileInput}\r\n              ref={fileInputRef}\r\n              full\r\n            />\r\n            <ProfileEditUploadBtn\r\n              onClick={clickUpload}\r\n              className=\"translate-x-[-11rem] translate-y-[0.4rem]\"\r\n            ></ProfileEditUploadBtn>\r\n          </div>\r\n          <BasicInfo />\r\n\r\n          <UnivInfo />\r\n          \r\n          <Certificate collapse/>\r\n\r\n          <ExtraCertification />\r\n\r\n          {/* <TKCareer /> */}\r\n\r\n          <CareerType />\r\n\r\n          <DriverLicense />\r\n          \r\n        </div>\r\n        <div className='text-[#6e6e6e] text-[15px] mt-[10px]'>\r\n          * 사범님 정보를 등록하여야 다음 단계로 넘어갑니다. <br />\r\n          * 정확하게 작성해 주세요!\r\n        </div>\r\n\r\n        <div className=\"mt-[20%] flex justify-center items-center gap-[5px]\">\r\n          <SecondBtnSM className=\"w-[111px] h-[40px] text-[16px]\" onClick={() => navigate('/logout')}>\r\n            로그아웃\r\n          </SecondBtnSM>\r\n          <PrimaryBtnSM className=\"w-[380px] h-[40px] text-[16px]\" onClick={handleSubmit} disabled={loading || isLoading}>\r\n            등록\r\n          </PrimaryBtnSM>\r\n        </div>\r\n\r\n      </PageContainer>\r\n\r\n      { isLoading || loading && <LoadingModal />}\r\n\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default SabumInfoRegistration;\r\n"],"names":["useState","alignment","setAlignment","useToggle","expanded","Control","form","dojang_name","start_date","end_date","status","list","setList","handleDelete","e","id","currentTarget","temp","filter","v","idx","handleChange","name","value","handleSelect","index","target","title","onChange","className","CareerBtn","React","map","item","BlackBtnSM","onClick","placeholder","sx","height","width","DatepickerSM","length","employment_start_date","hidden","readOnly","employment_end_date","CreateBtnMD","navigate","useNavigate","useRecoilState","userInfoAtom","userInfo","setUserInfo","useMutation","body","createSabumInfo","mutate","isLoading","loading","setLoading","img","setImg","useFileInput","data","urlKey","fileKey","set","handleFileInput","fileInputRef","clickUpload","Header","PageContainer","Typography","variant","ProfileImage","size","previewUrl","ref","full","ProfileEditUploadBtn","BasicInfo","UnivInfo","Certificate","collapse","ExtraCertification","DriverLicense","SecondBtnSM","PrimaryBtnSM","dob","document","getElementById","sex","textContent","school_name","admission_date","admission_year","slice","admission_month","Number","graduated_date","graduated_year","graduated_month","major","grades","total_grades","level","tkd_level_number","instructor_license_grade","instructor_license_number","otherCertLength","getElementsByName","otherCertList","i","license_name","license_grade","license_number","push","careerLength","careerList","startDate","endDate","employment_start_year","employment_start_month","employment_end_year","employment_end_month","alert","driver_license","driver_license_obtaining_date","user","Object","entries","date","driver_license_obtaining_year","driver_license_obtaining_month","JSON","stringify","formData","getFormData","onSuccess","res","is_linked","setTimeout","onError","err","response","message","disabled","LoadingModal"],"sourceRoot":""}