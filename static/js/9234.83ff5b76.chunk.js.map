{"version":3,"file":"static/js/9234.83ff5b76.chunk.js","mappings":"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","sources":["../node_modules/delaunator/index.js","../node_modules/d3-delaunay/src/path.js","../node_modules/d3-delaunay/src/polygon.js","../node_modules/d3-delaunay/src/voronoi.js","../node_modules/d3-delaunay/src/delaunay.js","../node_modules/@nivo/voronoi/src/computeMesh.ts","../node_modules/@nivo/voronoi/src/hooks.ts","../node_modules/@nivo/voronoi/src/Mesh.tsx","../node_modules/@nivo/line/src/PointTooltip.js","../node_modules/@nivo/line/src/SliceTooltip.js","../node_modules/@nivo/line/src/props.js","../node_modules/@nivo/line/src/hooks.js","../node_modules/@nivo/line/src/Areas.js","../node_modules/@nivo/line/src/LinesItem.js","../node_modules/@nivo/line/src/Lines.js","../node_modules/@nivo/line/src/SlicesItem.js","../node_modules/@nivo/line/src/Slices.js","../node_modules/@nivo/line/src/Points.js","../node_modules/@nivo/line/src/Mesh.js","../node_modules/@nivo/line/src/Line.js","../node_modules/@nivo/line/src/ResponsiveLine.js","../node_modules/@nivo/line/src/LineCanvas.js","../node_modules/@nivo/voronoi/src/meshCanvas.ts","../node_modules/@nivo/line/src/ResponsiveLineCanvas.js","../node_modules/d3-path/src/path.js","../node_modules/d3-shape/src/area.js","../node_modules/d3-shape/src/line.js","../node_modules/d3-shape/src/point.js"],"sourcesContent":["\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\nexport default class Delaunator {\n\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\n        const n = points.length;\n        const coords = new Float64Array(n * 2);\n\n        for (let i = 0; i < n; i++) {\n            const p = points[i];\n            coords[2 * i] = getX(p);\n            coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n    }\n\n    constructor(coords) {\n        const n = coords.length >> 1;\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n\n        this.coords = coords;\n\n        // arrays that will store the triangulation graph\n        const maxTriangles = Math.max(2 * n - 5, 0);\n        this._triangles = new Uint32Array(maxTriangles * 3);\n        this._halfedges = new Int32Array(maxTriangles * 3);\n\n        // temporary arrays for tracking the edges of the advancing convex hull\n        this._hashSize = Math.ceil(Math.sqrt(n));\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\n        this._hullNext = new Uint32Array(n); // edge to next edge\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\n\n        // temporary arrays for sorting points\n        this._ids = new Uint32Array(n);\n        this._dists = new Float64Array(n);\n\n        this.update();\n    }\n\n    update() {\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\n        const n = coords.length >> 1;\n\n        // populate an array of point indices; calculate input data bbox\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0; i < n; i++) {\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            this._ids[i] = i;\n        }\n        const cx = (minX + maxX) / 2;\n        const cy = (minY + maxY) / 2;\n\n        let minDist = Infinity;\n        let i0, i1, i2;\n\n        // pick a seed point close to the center\n        for (let i = 0; i < n; i++) {\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist) {\n                i0 = i;\n                minDist = d;\n            }\n        }\n        const i0x = coords[2 * i0];\n        const i0y = coords[2 * i0 + 1];\n\n        minDist = Infinity;\n\n        // find the point closest to the seed\n        for (let i = 0; i < n; i++) {\n            if (i === i0) continue;\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist && d > 0) {\n                i1 = i;\n                minDist = d;\n            }\n        }\n        let i1x = coords[2 * i1];\n        let i1y = coords[2 * i1 + 1];\n\n        let minRadius = Infinity;\n\n        // find the third point which forms the smallest circumcircle with the first two\n        for (let i = 0; i < n; i++) {\n            if (i === i0 || i === i1) continue;\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n            if (r < minRadius) {\n                i2 = i;\n                minRadius = r;\n            }\n        }\n        let i2x = coords[2 * i2];\n        let i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n            // order collinear points by dx (or dy if all x are identical)\n            // and return the list as a hull\n            for (let i = 0; i < n; i++) {\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\n            }\n            quicksort(this._ids, this._dists, 0, n - 1);\n            const hull = new Uint32Array(n);\n            let j = 0;\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\n                const id = this._ids[i];\n                if (this._dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = this._dists[id];\n                }\n            }\n            this.hull = hull.subarray(0, j);\n            this.triangles = new Uint32Array(0);\n            this.halfedges = new Uint32Array(0);\n            return;\n        }\n\n        // swap the order of the seed points for counter-clockwise orientation\n        if (orient(i0x, i0y, i1x, i1y, i2x, i2y)) {\n            const i = i1;\n            const x = i1x;\n            const y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (let i = 0; i < n; i++) {\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n        }\n\n        // sort the points by distance from the seed triangle circumcenter\n        quicksort(this._ids, this._dists, 0, n - 1);\n\n        // set up the seed triangle as the starting hull\n        this._hullStart = i0;\n        let hullSize = 3;\n\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n\n        this.trianglesLen = 0;\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\n            const i = this._ids[k];\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n\n            // skip near-duplicate points\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n            xp = x;\n            yp = y;\n\n            // skip seed triangle points\n            if (i === i0 || i === i1 || i === i2) continue;\n\n            // find a visible edge on the convex hull using edge hash\n            let start = 0;\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n                start = hullHash[(key + j) % this._hashSize];\n                if (start !== -1 && start !== hullNext[start]) break;\n            }\n\n            start = hullPrev[start];\n            let e = start, q;\n            while (q = hullNext[e], !orient(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1])) {\n                e = q;\n                if (e === start) {\n                    e = -1;\n                    break;\n                }\n            }\n            if (e === -1) continue; // likely a near-duplicate point; skip it\n\n            // add the first triangle from the point\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\n            hullTri[i] = this._legalize(t + 2);\n            hullTri[e] = t; // keep track of boundary triangles on the hull\n            hullSize++;\n\n            // walk forward through the hull, adding more triangles and flipping recursively\n            let n = hullNext[e];\n            while (q = hullNext[n], orient(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1])) {\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this._legalize(t + 2);\n                hullNext[n] = n; // mark as removed\n                hullSize--;\n                n = q;\n            }\n\n            // walk backward from the other side, adding more triangles and flipping\n            if (e === start) {\n                while (q = hullPrev[e], orient(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1])) {\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this._legalize(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e; // mark as removed\n                    hullSize--;\n                    e = q;\n                }\n            }\n\n            // update the hull indices\n            this._hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n\n            // save the two new edges in the hash table\n            hullHash[this._hashKey(x, y)] = i;\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n            this.hull[i] = e;\n            e = hullNext[e];\n        }\n\n        // trim typed triangle mesh arrays\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n\n    _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n\n    _legalize(a) {\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\n\n        let i = 0;\n        let ar = 0;\n\n        // recursion eliminated with a fixed-size stack\n        while (true) {\n            const b = halfedges[a];\n\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n             * then do the same check/flip recursively for the new pair of triangles\n             *\n             *           pl                    pl\n             *          /||\\                  /  \\\n             *       al/ || \\bl            al/    \\a\n             *        /  ||  \\              /      \\\n             *       /  a||b  \\    flip    /___ar___\\\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n             *        \\  ||  /              \\      /\n             *       ar\\ || /br             b\\    /br\n             *          \\||/                  \\  /\n             *           pr                    pr\n             */\n            const a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n\n            if (b === -1) { // convex hull edge\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n                continue;\n            }\n\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n\n            const illegal = inCircle(\n                coords[2 * p0], coords[2 * p0 + 1],\n                coords[2 * pr], coords[2 * pr + 1],\n                coords[2 * pl], coords[2 * pl + 1],\n                coords[2 * p1], coords[2 * p1 + 1]);\n\n            if (illegal) {\n                triangles[a] = p1;\n                triangles[b] = p0;\n\n                const hbl = halfedges[bl];\n\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\n                if (hbl === -1) {\n                    let e = this._hullStart;\n                    do {\n                        if (this._hullTri[e] === bl) {\n                            this._hullTri[e] = a;\n                            break;\n                        }\n                        e = this._hullPrev[e];\n                    } while (e !== this._hullStart);\n                }\n                this._link(a, hbl);\n                this._link(b, halfedges[ar]);\n                this._link(ar, bl);\n\n                const br = b0 + (b + 1) % 3;\n\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\n                if (i < EDGE_STACK.length) {\n                    EDGE_STACK[i++] = br;\n                }\n            } else {\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n            }\n        }\n\n        return ar;\n    }\n\n    _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n    }\n\n    // add a new triangle given vertex indices and adjacent half-edge ids\n    _addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.trianglesLen;\n\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n        this._link(t + 1, b);\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n\n        return t;\n    }\n}\n\n// monotonically increases with real angle, but doesn't need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\n// return 2d orientation sign if we're confident in it through J. Shewchuk's error bound check\nfunction orientIfSure(px, py, rx, ry, qx, qy) {\n    const l = (ry - py) * (qx - px);\n    const r = (rx - px) * (qy - py);\n    return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;\n}\n\n// a more robust orientation test that's stable in a given triangle (to fix robustness issues)\nfunction orient(rx, ry, qx, qy, px, py) {\n    const sign = orientIfSure(px, py, rx, ry, qx, qy) ||\n    orientIfSure(rx, ry, qx, qy, px, py) ||\n    orientIfSure(qx, qy, px, py, rx, ry);\n    return sign < 0;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    const dx = ax - px;\n    const dy = ay - py;\n    const ex = bx - px;\n    const ey = by - py;\n    const fx = cx - px;\n    const fy = cy - py;\n\n    const ap = dx * dx + dy * dy;\n    const bp = ex * ex + ey * ey;\n    const cp = fx * fx + fy * fy;\n\n    return dx * (ey * cp - bp * fy) -\n           dy * (ex * cp - bp * fx) +\n           ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = (ey * bl - dy * cl) * d;\n    const y = (dx * cl - ex * bl) * d;\n\n    return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = ax + (ey * bl - dy * cl) * d;\n    const y = ay + (dx * cl - ex * bl) * d;\n\n    return {x, y};\n}\n\nfunction quicksort(ids, dists, left, right) {\n    if (right - left <= 20) {\n        for (let i = left + 1; i <= right; i++) {\n            const temp = ids[i];\n            const tempDist = dists[temp];\n            let j = i - 1;\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n            ids[j + 1] = temp;\n        }\n    } else {\n        const median = (left + right) >> 1;\n        let i = left + 1;\n        let j = right;\n        swap(ids, median, i);\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n\n        const temp = ids[i];\n        const tempDist = dists[temp];\n        while (true) {\n            do i++; while (dists[ids[i]] < tempDist);\n            do j--; while (dists[ids[j]] > tempDist);\n            if (j < i) break;\n            swap(ids, i, j);\n        }\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n            quicksort(ids, dists, i, right);\n            quicksort(ids, dists, left, j - 1);\n        } else {\n            quicksort(ids, dists, left, j - 1);\n            quicksort(ids, dists, i, right);\n        }\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n    return p[0];\n}\nfunction defaultGetY(p) {\n    return p[1];\n}\n","const epsilon = 1e-6;\n\nexport default class Path {\n  constructor() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n  }\n  moveTo(x, y) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  }\n  lineTo(x, y) {\n    this._ += `L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arc(x, y, r) {\n    x = +x, y = +y, r = +r;\n    const x0 = x + r;\n    const y0 = y;\n    if (r < 0) throw new Error(\"negative radius\");\n    if (this._x1 === null) this._ += `M${x0},${y0}`;\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += \"L\" + x0 + \",\" + y0;\n    if (!r) return;\n    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;\n  }\n  rect(x, y, w, h) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;\n  }\n  value() {\n    return this._ || null;\n  }\n}\n","export default class Polygon {\n  constructor() {\n    this._ = [];\n  }\n  moveTo(x, y) {\n    this._.push([x, y]);\n  }\n  closePath() {\n    this._.push(this._[0].slice());\n  }\n  lineTo(x, y) {\n    this._.push([x, y]);\n  }\n  value() {\n    return this._.length ? this._ : null;\n  }\n}\n","import Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\n\nexport default class Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {delaunay: {points, hull, triangles}, vectors} = this;\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const bl = dx * dx + dy * dy;\n      const cl = ex * ex + ey * ey;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (!ab) {\n        // degenerate case (collinear diagram)\n        x = (x1 + x3) / 2 - 1e8 * ey;\n        y = (y1 + y3) / 2 + 1e8 * ex;\n      }\n      else if (Math.abs(ab) < 1e-8) {\n        // almost equal points (degenerate triangle)\n        x = (x1 + x3) / 2;\n        y = (y1 + y3) / 2;\n      } else {\n        const d = 1 / ab;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0, p1 = h * 4;\n    let x0, x1 = points[2 * h];\n    let y0, y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0, h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\n        context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {delaunay: {points}} = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon;\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] == cj[aj]\n          && ci[ai + 1] == cj[aj + 1]\n          && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj]\n          && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj]\n          ) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {vectors: V} = this;\n    const v = i * 4;\n    return V[v] || V[v + 1]\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\n        : this._clipFinite(i, points);\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\n    let c0, c1 = this._regioncode(x1, y1);\n    let e0, e1;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);\n        else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);\n          else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);\n        else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    while (true) {\n      if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x, y, c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points), p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101: e0 = 0b0100; continue; // top-left\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\n        case 0b0110: e0 = 0b0010; continue; // top-right\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\n      }\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    if (P.length > 4) {\n      for (let i = 0; i < P.length; i+= 2) {\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k]\n        || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1])\n          P.splice(j, 2), i -= 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity, c, x, y;\n    if (vy < 0) { // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) { // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) { // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) { // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001\n        : x === this.xmax ? 0b0010 : 0b0000)\n        | (y === this.ymin ? 0b0100\n        : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001\n        : x > this.xmax ? 0b0010 : 0b0000)\n        | (y < this.ymin ? 0b0100\n        : y > this.ymax ? 0b1000 : 0b0000);\n  }\n}\n","import Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\n\nconst tau = 2 * Math.PI, pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  const {triangles, coords} = d;\n  for (let i = 0; i < triangles.length; i += 3) {\n    const a = 2 * triangles[i],\n          b = 2 * triangles[i + 1],\n          c = 2 * triangles[i + 2],\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nexport default class Delaunay {\n  static from(points, fx = pointX, fy = pointY, that) {\n    return new Delaunay(\"length\" in points\n        ? flatArray(points, fx, fy, that)\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\n  }\n  constructor(points) {\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  update() {\n    this._delaunator.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const d = this._delaunator, points = this.points;\n\n    // check for collinear\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n      this._delaunator = new Delaunator(points);\n    } else {\n      delete this.collinear;\n    }\n\n    const halfedges = this.halfedges = this._delaunator.halfedges;\n    const hull = this.hull = this._delaunator.hull;\n    const triangles = this.triangles = this._delaunator.triangles;\n    const inedges = this.inedges.fill(-1);\n    const hullIndex = this._hullIndex.fill(-1);\n\n    // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n    }\n    for (let i = 0, n = hull.length; i < n; ++i) {\n      hullIndex[hull[i]] = i;\n    }\n\n    // degenerate case: 1 or 2 (distinct) points\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      this.triangles[1] = hull[1];\n      this.triangles[2] = hull[1];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) inedges[hull[1]] = 0;\n    }\n  }\n  voronoi(bounds) {\n    return new Voronoi(this, bounds);\n  }\n  *neighbors(i) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\n\n    // degenerate case with several collinear points\n    if (collinear) {\n      const l = collinear.indexOf(i);\n      if (l > 0) yield collinear[l - 1];\n      if (l < collinear.length - 1) yield collinear[l + 1];\n      return;\n    }\n\n    const e0 = inedges[i];\n    if (e0 === -1) return; // coincident point\n    let e = e0, p0 = -1;\n    do {\n      yield p0 = triangles[e];\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) return; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) yield p;\n        return;\n      }\n    } while (e !== e0);\n  }\n  find(x, y, i = 0) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    const i0 = i;\n    let c;\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n    return c;\n  }\n  _step(i, x, y) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    let c = i;\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n    const e0 = inedges[i];\n    let e = e0;\n    do {\n      let t = triangles[e];\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n      if (dt < dc) dc = dt, c = t;\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        e = hull[(_hullIndex[i] + 1) % hull.length];\n        if (e !== t) {\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n        }\n        break;\n      }\n    } while (e !== e0);\n    return c;\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, halfedges, triangles} = this;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = triangles[i] * 2;\n      const tj = triangles[j] * 2;\n      context.moveTo(points[ti], points[ti + 1]);\n      context.lineTo(points[tj], points[tj + 1]);\n    }\n    this.renderHull(context);\n    return buffer && buffer.value();\n  }\n  renderPoints(context, r = 2) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points} = this;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i], y = points[i + 1];\n      context.moveTo(x + r, y);\n      context.arc(x, y, r, 0, tau);\n    }\n    return buffer && buffer.value();\n  }\n  renderHull(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {hull, points} = this;\n    const h = hull[0] * 2, n = hull.length;\n    context.moveTo(points[h], points[h + 1]);\n    for (let i = 1; i < n; ++i) {\n      const h = 2 * hull[i];\n      context.lineTo(points[h], points[h + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  hullPolygon() {\n    const polygon = new Polygon;\n    this.renderHull(polygon);\n    return polygon.value();\n  }\n  renderTriangle(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, triangles} = this;\n    const t0 = triangles[i *= 3] * 2;\n    const t1 = triangles[i + 1] * 2;\n    const t2 = triangles[i + 2] * 2;\n    context.moveTo(points[t0], points[t0 + 1]);\n    context.lineTo(points[t1], points[t1 + 1]);\n    context.lineTo(points[t2], points[t2 + 1]);\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *trianglePolygons() {\n    const {triangles} = this;\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n      yield this.trianglePolygon(i);\n    }\n  }\n  trianglePolygon(i) {\n    const polygon = new Polygon;\n    this.renderTriangle(i, polygon);\n    return polygon.value();\n  }\n}\n\nfunction flatArray(points, fx, fy, that) {\n  const n = points.length;\n  const array = new Float64Array(n * 2);\n  for (let i = 0; i < n; ++i) {\n    const p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\n\nfunction* flatIterable(points, fx, fy, that) {\n  let i = 0;\n  for (const p of points) {\n    yield fx.call(that, p, i, points);\n    yield fy.call(that, p, i, points);\n    ++i;\n  }\n}\n","import { Delaunay } from 'd3-delaunay'\n\ntype NumberPropertyNames<T> = {\n    [K in keyof T]: T[K] extends number ? K : never\n}[keyof T]\n\nexport type XYAccessor<Datum> = NumberPropertyNames<Datum> | ((datum: Datum) => number)\n\nconst getAccessor = <Datum>(directive: XYAccessor<Datum>) =>\n    typeof directive === 'function' ? directive : (datum: Datum) => datum[directive]\n\n/**\n * The delaunay generator requires an array\n * where each point is defined as an array\n * of 2 elements: [x: number, y: number].\n *\n * Points represent the raw input data\n * and x/y represent accessors to x & y.\n */\nexport const computeMeshPoints = <Datum>({\n    points,\n    x = 'x' as NumberPropertyNames<Datum>,\n    y = 'y' as NumberPropertyNames<Datum>,\n}: {\n    points: Datum[]\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n}): [number, number][] => {\n    const getX = getAccessor<Datum>(x)\n    const getY = getAccessor<Datum>(y)\n\n    return points.map(point => [getX(point) as number, getY(point) as number])\n}\n\nexport const computeMesh = ({\n    points,\n    width,\n    height,\n    debug,\n}: {\n    points: [number, number][]\n    width: number\n    height: number\n    debug?: boolean\n}) => {\n    const delaunay = Delaunay.from(points)\n    const voronoi = debug ? delaunay.voronoi([0, 0, width, height]) : undefined\n\n    return { delaunay, voronoi }\n}\n","import { useMemo } from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport { Delaunay } from 'd3-delaunay'\nimport { computeMeshPoints, computeMesh, XYAccessor } from './computeMesh'\nimport { VoronoiCommonProps, VoronoiDatum, VoronoiCustomLayerProps } from './types'\n\nexport const useVoronoiMesh = <Datum>({\n    points,\n    x,\n    y,\n    width,\n    height,\n    debug,\n}: {\n    points: Datum[]\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n    width: number\n    height: number\n    debug?: boolean\n}) => {\n    const points2d = useMemo(() => computeMeshPoints<Datum>({ points, x, y }), [points, x, y])\n\n    return useMemo(\n        () => computeMesh({ points: points2d, width, height, debug }),\n        [points2d, width, height, debug]\n    )\n}\n\nexport const useVoronoi = ({\n    data,\n    width,\n    height,\n    xDomain,\n    yDomain,\n}: {\n    data: VoronoiDatum[]\n    width: number\n    height: number\n    xDomain: VoronoiCommonProps['xDomain']\n    yDomain: VoronoiCommonProps['yDomain']\n}) => {\n    const xScale = useMemo(() => scaleLinear().domain(xDomain).range([0, width]), [xDomain, width])\n    const yScale = useMemo(\n        () => scaleLinear().domain(yDomain).range([0, height]),\n        [yDomain, height]\n    )\n\n    const points = useMemo(\n        () =>\n            data.map(d => ({\n                x: xScale(d.x),\n                y: yScale(d.y),\n                data: d,\n            })),\n        [data, xScale, yScale]\n    )\n\n    return useMemo(() => {\n        const delaunay = Delaunay.from(points.map(p => [p.x, p.y]))\n        const voronoi = delaunay.voronoi([0, 0, width, height])\n\n        return {\n            points,\n            delaunay,\n            voronoi,\n        }\n    }, [points, width, height])\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const useVoronoiLayerContext = ({\n    points,\n    delaunay,\n    voronoi,\n}: VoronoiCustomLayerProps): VoronoiCustomLayerProps =>\n    useMemo(\n        () => ({\n            points,\n            delaunay,\n            voronoi,\n        }),\n        [points, delaunay, voronoi]\n    )\n","import { useRef, useState, useCallback, useMemo } from 'react'\nimport * as React from 'react'\nimport { getRelativeCursor } from '@nivo/core'\nimport { useVoronoiMesh } from './hooks'\nimport { XYAccessor } from './computeMesh'\n\ntype MouseHandler<Datum> = (datum: Datum, event: React.MouseEvent) => void\n\ninterface MeshProps<Datum> {\n    nodes: Datum[]\n    width: number\n    height: number\n    x?: XYAccessor<Datum>\n    y?: XYAccessor<Datum>\n    onMouseEnter?: MouseHandler<Datum>\n    onMouseMove?: MouseHandler<Datum>\n    onMouseLeave?: MouseHandler<Datum>\n    onClick?: MouseHandler<Datum>\n    debug?: boolean\n}\n\nexport const Mesh = <Datum,>({\n    nodes,\n    width,\n    height,\n    x,\n    y,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    debug,\n}: MeshProps<Datum>) => {\n    const elementRef = useRef<SVGGElement>(null)\n    const [currentIndex, setCurrentIndex] = useState<number | null>(null)\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points: nodes,\n        x,\n        y,\n        width,\n        height,\n        debug,\n    })\n\n    const voronoiPath = useMemo(() => {\n        if (debug && voronoi) {\n            return voronoi.render()\n        }\n\n        return undefined\n    }, [debug, voronoi])\n\n    const getIndexAndNodeFromEvent = useCallback(\n        event => {\n            if (!elementRef.current) {\n                return [null, null]\n            }\n\n            const [x, y] = getRelativeCursor(elementRef.current, event)\n            const index = delaunay.find(x, y)\n\n            return [index, index !== undefined ? nodes[index] : null] as [number, Datum | null]\n        },\n        [elementRef, delaunay]\n    )\n\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onMouseEnter?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: React.MouseEvent) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onMouseMove?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent) => {\n            setCurrentIndex(null)\n            if (onMouseLeave) {\n                let previousNode: Datum | undefined = undefined\n                if (currentIndex !== null) {\n                    previousNode = nodes[currentIndex]\n                }\n                previousNode && onMouseLeave(previousNode, event)\n            }\n        },\n        [setCurrentIndex, currentIndex, onMouseLeave, nodes]\n    )\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent) => {\n            const [index, node] = getIndexAndNodeFromEvent(event)\n            setCurrentIndex(index)\n            if (node) {\n                onClick?.(node, event)\n            }\n        },\n        [getIndexAndNodeFromEvent, setCurrentIndex, onClick]\n    )\n\n    return (\n        <g ref={elementRef}>\n            {debug && voronoi && (\n                <>\n                    <path d={voronoiPath} stroke=\"red\" strokeWidth={1} opacity={0.75} />\n                    {/* highlight current cell */}\n                    {currentIndex !== null && (\n                        <path fill=\"pink\" opacity={0.35} d={voronoi.renderCell(currentIndex)} />\n                    )}\n                </>\n            )}\n            {/* transparent rect to intercept mouse events */}\n            <rect\n                width={width}\n                height={height}\n                fill=\"red\"\n                opacity={0}\n                style={{ cursor: 'auto' }}\n                onMouseEnter={handleMouseEnter}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n                onClick={handleClick}\n            />\n        </g>\n    )\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst LinePointTooltip = ({ point }) => {\n    return (\n        <BasicTooltip\n            id={\n                <span>\n                    x: <strong>{point.data.xFormatted}</strong>, y:{' '}\n                    <strong>{point.data.yFormatted}</strong>\n                </span>\n            }\n            enableChip={true}\n            color={point.serieColor}\n        />\n    )\n}\n\nLinePointTooltip.propTypes = {\n    point: PropTypes.object.isRequired,\n}\n\nexport default memo(LinePointTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@nivo/core'\nimport { Chip, TableTooltip } from '@nivo/tooltip'\n\nconst SliceTooltip = ({ slice, axis }) => {\n    const theme = useTheme()\n    const otherAxis = axis === 'x' ? 'y' : 'x'\n\n    return (\n        <TableTooltip\n            rows={slice.points.map(point => [\n                <Chip key=\"chip\" color={point.serieColor} style={theme.tooltip.chip} />,\n                point.serieId,\n                <span key=\"value\" style={theme.tooltip.tableCellValue}>\n                    {point.data[`${otherAxis}Formatted`]}\n                </span>,\n            ])}\n        />\n    )\n}\n\nSliceTooltip.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n}\n\nexport default memo(SliceTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { lineCurvePropType, blendModePropType, motionPropTypes, defsPropTypes } from '@nivo/core'\nimport { ordinalColorsPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport { LegendPropShape } from '@nivo/legends'\nimport PointTooltip from './PointTooltip'\nimport SliceTooltip from './SliceTooltip'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                    y: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    xScale: PropTypes.object.isRequired,\n    xFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    yScale: PropTypes.object.isRequired,\n    yFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf([\n                'grid',\n                'markers',\n                'axes',\n                'areas',\n                'crosshair',\n                'lines',\n                'slices',\n                'points',\n                'mesh',\n                'legends',\n            ]),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    curve: lineCurvePropType.isRequired,\n\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    enableGridX: PropTypes.bool.isRequired,\n    enableGridY: PropTypes.bool.isRequired,\n    gridXValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n    gridYValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n\n    enablePoints: PropTypes.bool.isRequired,\n    pointSymbol: PropTypes.func,\n    pointSize: PropTypes.number.isRequired,\n    pointColor: PropTypes.any.isRequired,\n    pointBorderWidth: PropTypes.number.isRequired,\n    pointBorderColor: PropTypes.any.isRequired,\n    enablePointLabel: PropTypes.bool.isRequired,\n    pointLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n\n    markers: PropTypes.arrayOf(\n        PropTypes.shape({\n            axis: PropTypes.oneOf(['x', 'y']).isRequired,\n            value: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            style: PropTypes.object,\n        })\n    ),\n\n    colors: ordinalColorsPropType.isRequired,\n\n    enableArea: PropTypes.bool.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    areaBaselineValue: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.instanceOf(Date),\n    ]).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    debugMesh: PropTypes.bool.isRequired,\n\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableSlices: PropTypes.oneOf(['x', 'y', false]).isRequired,\n    debugSlices: PropTypes.bool.isRequired,\n    sliceTooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableCrosshair: PropTypes.bool.isRequired,\n    crosshairType: PropTypes.string.isRequired,\n}\n\nexport const LinePropTypes = {\n    ...commonPropTypes,\n    enablePointLabel: PropTypes.bool.isRequired,\n    role: PropTypes.string.isRequired,\n    useMesh: PropTypes.bool.isRequired,\n    ...motionPropTypes,\n    ...defsPropTypes,\n}\n\nexport const LineCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    curve: 'linear',\n\n    xScale: {\n        type: 'point',\n    },\n    yScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    },\n\n    layers: [\n        'grid',\n        'markers',\n        'axes',\n        'areas',\n        'crosshair',\n        'lines',\n        'points',\n        'slices',\n        'mesh',\n        'legends',\n    ],\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: true,\n    enableGridY: true,\n\n    enablePoints: true,\n    pointSize: 6,\n    pointColor: { from: 'color' },\n    pointBorderWidth: 0,\n    pointBorderColor: { theme: 'background' },\n    enablePointLabel: false,\n    pointLabel: 'yFormatted',\n\n    colors: { scheme: 'nivo' },\n    enableArea: false,\n    areaBaselineValue: 0,\n    areaOpacity: 0.2,\n    areaBlendMode: 'normal',\n    lineWidth: 2,\n\n    legends: [],\n\n    isInteractive: true,\n    tooltip: PointTooltip,\n    enableSlices: false,\n    debugSlices: false,\n    sliceTooltip: SliceTooltip,\n    debugMesh: false,\n    enableCrosshair: true,\n    crosshairType: 'bottom-left',\n}\n\nexport const LineDefaultProps = {\n    ...commonDefaultProps,\n    enablePointLabel: false,\n    useMesh: false,\n    animate: true,\n    motionConfig: 'gentle',\n    defs: [],\n    fill: [],\n    role: 'img',\n}\n\nexport const LineCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useCallback, useMemo, useState } from 'react'\nimport { area, line } from 'd3-shape'\nimport { curveFromProp, useTheme, useValueFormatter } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { computeXYScalesForSeries } from '@nivo/scales'\nimport { LineDefaultProps } from './props'\n\nexport const useLineGenerator = ({ curve }) => {\n    return useMemo(\n        () =>\n            line()\n                .defined(d => d.x !== null && d.y !== null)\n                .x(d => d.x)\n                .y(d => d.y)\n                .curve(curveFromProp(curve)),\n        [curve]\n    )\n}\n\nexport const useAreaGenerator = ({ curve, yScale, areaBaselineValue }) => {\n    return useMemo(() => {\n        return area()\n            .defined(d => d.x !== null && d.y !== null)\n            .x(d => d.x)\n            .y1(d => d.y)\n            .curve(curveFromProp(curve))\n            .y0(yScale(areaBaselineValue))\n    }, [curve, yScale, areaBaselineValue])\n}\n\nconst usePoints = ({ series, getPointColor, getPointBorderColor, formatX, formatY }) => {\n    return useMemo(() => {\n        return series.reduce((acc, serie) => {\n            return [\n                ...acc,\n                ...serie.data\n                    .filter(datum => datum.position.x !== null && datum.position.y !== null)\n                    .map((datum, i) => {\n                        const point = {\n                            id: `${serie.id}.${i}`,\n                            index: acc.length + i,\n                            serieId: serie.id,\n                            serieColor: serie.color,\n                            x: datum.position.x,\n                            y: datum.position.y,\n                        }\n                        point.color = getPointColor(serie)\n                        point.borderColor = getPointBorderColor(point)\n                        point.data = {\n                            ...datum.data,\n                            xFormatted: formatX(datum.data.x),\n                            yFormatted: formatY(datum.data.y),\n                        }\n\n                        return point\n                    }),\n            ]\n        }, [])\n    }, [series, getPointColor, getPointBorderColor, formatX, formatY])\n}\n\nexport const useSlices = ({ enableSlices, points, width, height }) => {\n    return useMemo(() => {\n        if (enableSlices === false) return []\n\n        if (enableSlices === 'x') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.x)) map.set(point.x, [point])\n                else map.get(point.x).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([x, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let x0\n                    if (!prevSlice) x0 = x\n                    else x0 = x - (x - prevSlice[0]) / 2\n\n                    let sliceWidth\n                    if (!nextSlice) sliceWidth = width - x0\n                    else sliceWidth = x - x0 + (nextSlice[0] - x) / 2\n\n                    return {\n                        id: x,\n                        x0,\n                        x,\n                        y0: 0,\n                        y: 0,\n                        width: sliceWidth,\n                        height,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        } else if (enableSlices === 'y') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.y)) map.set(point.y, [point])\n                else map.get(point.y).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([y, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let y0\n                    if (!prevSlice) y0 = y\n                    else y0 = y - (y - prevSlice[0]) / 2\n\n                    let sliceHeight\n                    if (!nextSlice) sliceHeight = height - y0\n                    else sliceHeight = y - y0 + (nextSlice[0] - y) / 2\n\n                    return {\n                        id: y,\n                        x0: 0,\n                        x: 0,\n                        y0,\n                        y,\n                        width,\n                        height: sliceHeight,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        }\n    }, [enableSlices, points])\n}\n\nexport const useLine = ({\n    data,\n    xScale: xScaleSpec = LineDefaultProps.xScale,\n    xFormat,\n    yScale: yScaleSpec = LineDefaultProps.yScale,\n    yFormat,\n    width,\n    height,\n    colors = LineDefaultProps.colors,\n    curve = LineDefaultProps.curve,\n    areaBaselineValue = LineDefaultProps.areaBaselineValue,\n    pointColor = LineDefaultProps.pointColor,\n    pointBorderColor = LineDefaultProps.pointBorderColor,\n    enableSlices = LineDefaultProps.enableSlicesTooltip,\n}) => {\n    const formatX = useValueFormatter(xFormat)\n    const formatY = useValueFormatter(yFormat)\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n    const [hiddenIds, setHiddenIds] = useState([])\n\n    const {\n        xScale,\n        yScale,\n        series: rawSeries,\n    } = useMemo(\n        () =>\n            computeXYScalesForSeries(\n                data.filter(item => hiddenIds.indexOf(item.id) === -1),\n                xScaleSpec,\n                yScaleSpec,\n                width,\n                height\n            ),\n        [data, hiddenIds, xScaleSpec, yScaleSpec, width, height]\n    )\n\n    const { legendData, series } = useMemo(() => {\n        const dataWithColor = data.map(line => ({\n            id: line.id,\n            label: line.id,\n            color: getColor(line),\n        }))\n        const series = dataWithColor\n            .map(datum => ({\n                ...rawSeries.find(serie => serie.id === datum.id),\n                color: datum.color,\n            }))\n            .filter(item => Boolean(item.id))\n        const legendData = dataWithColor\n            .map(item => ({ ...item, hidden: !series.find(serie => serie.id === item.id) }))\n            .reverse()\n\n        return { legendData, series }\n    }, [data, rawSeries, getColor])\n\n    const toggleSerie = useCallback(id => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const points = usePoints({\n        series,\n        getPointColor,\n        getPointBorderColor,\n        formatX,\n        formatY,\n    })\n\n    const slices = useSlices({\n        enableSlices,\n        points,\n        width,\n        height,\n    })\n\n    const lineGenerator = useLineGenerator({ curve })\n    const areaGenerator = useAreaGenerator({\n        curve,\n        yScale,\n        areaBaselineValue,\n    })\n\n    return {\n        legendData,\n        toggleSerie,\n        lineGenerator,\n        areaGenerator,\n        getColor,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig, blendModePropType } from '@nivo/core'\n\nconst AreaPath = ({ areaBlendMode, areaOpacity, color, fill, path }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedPath = useAnimatedPath(path)\n    const animatedProps = useSpring({\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={fill ? fill : animatedProps.color}\n            fillOpacity={areaOpacity}\n            strokeWidth={0}\n            style={{\n                mixBlendMode: areaBlendMode,\n            }}\n        />\n    )\n}\n\nAreaPath.propTypes = {\n    areaBlendMode: blendModePropType.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    color: PropTypes.string,\n    fill: PropTypes.string,\n    path: PropTypes.string.isRequired,\n}\n\nconst Areas = ({ areaGenerator, areaOpacity, areaBlendMode, lines }) => {\n    const computedLines = lines.slice(0).reverse()\n\n    return (\n        <g>\n            {computedLines.map(line => (\n                <AreaPath\n                    key={line.id}\n                    path={areaGenerator(line.data.map(d => d.position))}\n                    {...{ areaOpacity, areaBlendMode, ...line }}\n                />\n            ))}\n        </g>\n    )\n}\n\nAreas.propTypes = {\n    areaGenerator: PropTypes.func.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    lines: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default memo(Areas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath } from '@nivo/core'\n\nconst LinesItem = ({ lineGenerator, points, color, thickness }) => {\n    const path = useMemo(() => lineGenerator(points), [lineGenerator, points])\n    const animatedPath = useAnimatedPath(path)\n\n    return <animated.path d={animatedPath} fill=\"none\" strokeWidth={thickness} stroke={color} />\n}\n\nLinesItem.propTypes = {\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            x: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            y: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        })\n    ),\n    lineGenerator: PropTypes.func.isRequired,\n    color: PropTypes.string.isRequired,\n    thickness: PropTypes.number.isRequired,\n}\n\nexport default memo(LinesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport LinesItem from './LinesItem'\n\nconst Lines = ({ lines, lineGenerator, lineWidth }) => {\n    return lines\n        .slice(0)\n        .reverse()\n        .map(({ id, data, color }) => (\n            <LinesItem\n                key={id}\n                id={id}\n                points={data.map(d => d.position)}\n                lineGenerator={lineGenerator}\n                color={color}\n                thickness={lineWidth}\n            />\n        ))\n}\n\nLines.propTypes = {\n    lines: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    data: PropTypes.shape({\n                        x: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                        y: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                    }).isRequired,\n                    position: PropTypes.shape({\n                        x: PropTypes.number,\n                        y: PropTypes.number,\n                    }).isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n}\n\nexport default memo(Lines)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\n\nconst SlicesItem = ({ slice, axis, debug, tooltip, isCurrent, setCurrent }) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n            setCurrent(slice)\n        },\n        [showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n        },\n        [showTooltipFromEvent, tooltip, slice]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        hideTooltip()\n        setCurrent(null)\n    }, [hideTooltip])\n\n    return (\n        <rect\n            x={slice.x0}\n            y={slice.y0}\n            width={slice.width}\n            height={slice.height}\n            stroke=\"red\"\n            strokeWidth={debug ? 1 : 0}\n            strokeOpacity={0.75}\n            fill=\"red\"\n            fillOpacity={isCurrent && debug ? 0.35 : 0}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n\nSlicesItem.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    isCurrent: PropTypes.bool.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n}\n\nexport default memo(SlicesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport SlicesItem from './SlicesItem'\n\nconst Slices = ({ slices, axis, debug, height, tooltip, current, setCurrent }) => {\n    return slices.map(slice => (\n        <SlicesItem\n            key={slice.id}\n            slice={slice}\n            axis={axis}\n            debug={debug}\n            height={height}\n            tooltip={tooltip}\n            setCurrent={setCurrent}\n            isCurrent={current !== null && current.id === slice.id}\n        />\n    ))\n}\n\nSlices.propTypes = {\n    slices: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            points: PropTypes.arrayOf(PropTypes.object).isRequired,\n        })\n    ).isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    current: PropTypes.object,\n    setCurrent: PropTypes.func.isRequired,\n}\n\nexport default memo(Slices)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { getLabelGenerator, DotsItem, useTheme } from '@nivo/core'\n\nconst Points = ({ points, symbol, size, borderWidth, enableLabel, label, labelYOffset }) => {\n    const theme = useTheme()\n    const getLabel = getLabelGenerator(label)\n\n    /**\n     * We reverse the `points` array so that points from the lower lines in stacked lines\n     * graph are drawn on top. See https://github.com/plouc/nivo/issues/1051.\n     */\n    const mappedPoints = points\n        .slice(0)\n        .reverse()\n        .map(point => {\n            const mappedPoint = {\n                id: point.id,\n                x: point.x,\n                y: point.y,\n                datum: point.data,\n                fill: point.color,\n                stroke: point.borderColor,\n                label: enableLabel ? getLabel(point.data) : null,\n            }\n\n            return mappedPoint\n        })\n\n    return (\n        <g>\n            {mappedPoints.map(point => (\n                <DotsItem\n                    key={point.id}\n                    x={point.x}\n                    y={point.y}\n                    datum={point.datum}\n                    symbol={symbol}\n                    size={size}\n                    color={point.fill}\n                    borderWidth={borderWidth}\n                    borderColor={point.stroke}\n                    label={point.label}\n                    labelYOffset={labelYOffset}\n                    theme={theme}\n                />\n            ))}\n        </g>\n    )\n}\n\nPoints.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object),\n    symbol: PropTypes.func,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelYOffset: PropTypes.number,\n}\n\nexport default memo(Points)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\nimport { Mesh as BaseMesh } from '@nivo/voronoi'\n\nconst Mesh = ({\n    points,\n    width,\n    height,\n    margin,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    debug,\n}) => {\n    const { showTooltipAt, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseEnter && onMouseEnter(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseEnter, margin]\n    )\n\n    const handleMouseMove = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseMove && onMouseMove(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (point, event) => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(point, event)\n        },\n        [hideTooltip, setCurrent, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        (point, event) => {\n            onClick && onClick(point, event)\n        },\n        [onClick]\n    )\n\n    return (\n        <BaseMesh\n            nodes={points}\n            width={width}\n            height={height}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n            debug={debug}\n        />\n    )\n}\n\nMesh.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    margin: PropTypes.object.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    debug: PropTypes.bool.isRequired,\n}\n\nexport default memo(Mesh)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { Fragment, useState } from 'react'\nimport {\n    bindDefs,\n    withContainer,\n    useDimensions,\n    useTheme,\n    SvgWrapper,\n    CartesianMarkers,\n} from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { Crosshair } from '@nivo/tooltip'\nimport { useLine } from './hooks'\nimport { LinePropTypes, LineDefaultProps } from './props'\nimport Areas from './Areas'\nimport Lines from './Lines'\nimport Slices from './Slices'\nimport Points from './Points'\nimport Mesh from './Mesh'\n\nconst Line = props => {\n    const {\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        layers,\n        curve,\n        areaBaselineValue,\n\n        colors,\n\n        margin: partialMargin,\n        width,\n        height,\n\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        enableGridX,\n        enableGridY,\n        gridXValues,\n        gridYValues,\n\n        lineWidth,\n        enableArea,\n        areaOpacity,\n        areaBlendMode,\n\n        enablePoints,\n        pointSymbol,\n        pointSize,\n        pointColor,\n        pointBorderWidth,\n        pointBorderColor,\n        enablePointLabel,\n        pointLabel,\n        pointLabelYOffset,\n\n        defs,\n        fill,\n\n        markers,\n\n        legends,\n\n        isInteractive,\n\n        useMesh,\n        debugMesh,\n\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n\n        tooltip,\n\n        enableSlices,\n        debugSlices,\n        sliceTooltip,\n\n        enableCrosshair,\n        crosshairType,\n\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        legendData,\n        toggleSerie,\n        lineGenerator,\n        areaGenerator,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n        enableSlices,\n    })\n\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n\n    const [currentPoint, setCurrentPoint] = useState(null)\n    const [currentSlice, setCurrentSlice] = useState(null)\n\n    const layerById = {\n        grid: (\n            <Grid\n                key=\"grid\"\n                theme={theme}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        ),\n        markers: (\n            <CartesianMarkers\n                key=\"markers\"\n                markers={markers}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale}\n                yScale={yScale}\n                theme={theme}\n            />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                theme={theme}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        ),\n        areas: null,\n        lines: (\n            <Lines key=\"lines\" lines={series} lineGenerator={lineGenerator} lineWidth={lineWidth} />\n        ),\n        slices: null,\n        points: null,\n        crosshair: null,\n        mesh: null,\n        legends: legends.map((legend, i) => (\n            <BoxLegendSvg\n                key={`legend.${i}`}\n                {...legend}\n                containerWidth={innerWidth}\n                containerHeight={innerHeight}\n                data={legend.data || legendData}\n                theme={theme}\n                toggleSerie={legend.toggleSerie ? toggleSerie : undefined}\n            />\n        )),\n    }\n\n    const boundDefs = bindDefs(defs, series, fill)\n\n    if (enableArea) {\n        layerById.areas = (\n            <Areas\n                key=\"areas\"\n                areaGenerator={areaGenerator}\n                areaOpacity={areaOpacity}\n                areaBlendMode={areaBlendMode}\n                lines={series}\n            />\n        )\n    }\n\n    if (isInteractive && enableSlices !== false) {\n        layerById.slices = (\n            <Slices\n                key=\"slices\"\n                slices={slices}\n                axis={enableSlices}\n                debug={debugSlices}\n                height={innerHeight}\n                tooltip={sliceTooltip}\n                current={currentSlice}\n                setCurrent={setCurrentSlice}\n            />\n        )\n    }\n\n    if (enablePoints) {\n        layerById.points = (\n            <Points\n                key=\"points\"\n                points={points}\n                symbol={pointSymbol}\n                size={pointSize}\n                color={getPointColor}\n                borderWidth={pointBorderWidth}\n                borderColor={getPointBorderColor}\n                enableLabel={enablePointLabel}\n                label={pointLabel}\n                labelYOffset={pointLabelYOffset}\n            />\n        )\n    }\n\n    if (isInteractive && enableCrosshair) {\n        if (currentPoint !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentPoint.x}\n                    y={currentPoint.y}\n                    type={crosshairType}\n                />\n            )\n        }\n        if (currentSlice !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentSlice.x}\n                    y={currentSlice.y}\n                    type={enableSlices}\n                />\n            )\n        }\n    }\n\n    if (isInteractive && useMesh && enableSlices === false) {\n        layerById.mesh = (\n            <Mesh\n                key=\"mesh\"\n                points={points}\n                width={innerWidth}\n                height={innerHeight}\n                margin={margin}\n                current={currentPoint}\n                setCurrent={setCurrentPoint}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                tooltip={tooltip}\n                debug={debugMesh}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                series,\n                                slices,\n                                points,\n                                xScale,\n                                yScale,\n                                lineGenerator,\n                                areaGenerator,\n                                currentPoint,\n                                setCurrentPoint,\n                                currentSlice,\n                                setCurrentSlice,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nLine.propTypes = LinePropTypes\nLine.defaultProps = LineDefaultProps\n\nexport default withContainer(Line)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Line from './Line'\n\nconst ResponsiveLine = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Line width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveLine\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, useRef, useEffect, useState, useCallback, forwardRef } from 'react'\nimport {\n    withContainer,\n    useDimensions,\n    useTheme,\n    getRelativeCursor,\n    isCursorInRect,\n} from '@nivo/core'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useVoronoiMesh, renderVoronoiToCanvas, renderVoronoiCellToCanvas } from '@nivo/voronoi'\nimport { LineCanvasPropTypes, LineCanvasDefaultProps } from './props'\nimport { useLine } from './hooks'\n\nconst LineCanvas = ({\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio,\n\n    data,\n    xScale: xScaleSpec,\n    xFormat,\n    yScale: yScaleSpec,\n    yFormat,\n    curve,\n\n    layers,\n\n    colors,\n    lineWidth,\n\n    enableArea,\n    areaBaselineValue,\n    areaOpacity,\n\n    enablePoints,\n    pointSize,\n    pointColor,\n    pointBorderWidth,\n    pointBorderColor,\n\n    enableGridX,\n    gridXValues,\n    enableGridY,\n    gridYValues,\n    axisTop,\n    axisRight,\n    axisBottom,\n    axisLeft,\n\n    legends,\n\n    isInteractive,\n    debugMesh,\n    //onMouseEnter,\n    //onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n\n    canvasRef,\n}) => {\n    const canvasEl = useRef(null)\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n    const theme = useTheme()\n    const [currentPoint, setCurrentPoint] = useState(null)\n\n    const { lineGenerator, areaGenerator, series, xScale, yScale, points } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n    })\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points,\n        width: innerWidth,\n        height: innerHeight,\n        debug: debugMesh,\n    })\n\n    useEffect(() => {\n        if (canvasRef) {\n            canvasRef.current = canvasEl.current\n        }\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (typeof layer === 'function') {\n                layer({\n                    ctx,\n                    innerWidth,\n                    innerHeight,\n                    series,\n                    points,\n                    xScale,\n                    yScale,\n                    lineWidth,\n                    lineGenerator,\n                    areaGenerator,\n                    currentPoint,\n                    setCurrentPoint,\n                })\n            }\n\n            if (layer === 'grid' && theme.grid.line.strokeWidth > 0) {\n                ctx.lineWidth = theme.grid.line.strokeWidth\n                ctx.strokeStyle = theme.grid.line.stroke\n\n                enableGridX &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: xScale,\n                        axis: 'x',\n                        values: gridXValues,\n                    })\n\n                enableGridY &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: yScale,\n                        axis: 'y',\n                        values: gridYValues,\n                    })\n            }\n\n            if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale,\n                    yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            }\n\n            if (layer === 'areas' && enableArea === true) {\n                ctx.save()\n                ctx.globalAlpha = areaOpacity\n\n                areaGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.fillStyle = serie.color\n                    ctx.beginPath()\n                    areaGenerator(serie.data.map(d => d.position))\n                    ctx.fill()\n                })\n\n                ctx.restore()\n            }\n\n            if (layer === 'lines') {\n                lineGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.strokeStyle = serie.color\n                    ctx.lineWidth = lineWidth\n                    ctx.beginPath()\n                    lineGenerator(serie.data.map(d => d.position))\n                    ctx.stroke()\n                })\n            }\n\n            if (layer === 'points' && enablePoints === true && pointSize > 0) {\n                points.forEach(point => {\n                    ctx.fillStyle = point.color\n                    ctx.beginPath()\n                    ctx.arc(point.x, point.y, pointSize / 2, 0, 2 * Math.PI)\n                    ctx.fill()\n\n                    if (pointBorderWidth > 0) {\n                        ctx.strokeStyle = point.borderColor\n                        ctx.lineWidth = pointBorderWidth\n                        ctx.stroke()\n                    }\n                })\n            }\n\n            if (layer === 'mesh' && debugMesh === true) {\n                renderVoronoiToCanvas(ctx, voronoi)\n                if (currentPoint) {\n                    renderVoronoiCellToCanvas(ctx, voronoi, currentPoint.index)\n                }\n            }\n\n            if (layer === 'legends') {\n                const legendData = series\n                    .map(serie => ({\n                        id: serie.id,\n                        label: serie.id,\n                        color: serie.color,\n                    }))\n                    .reverse()\n\n                legends.forEach(legend => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data: legend.data || legendData,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        layers,\n        theme,\n        lineGenerator,\n        series,\n        xScale,\n        yScale,\n        enableGridX,\n        gridXValues,\n        enableGridY,\n        gridYValues,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        legends,\n        points,\n        enablePoints,\n        pointSize,\n        currentPoint,\n    ])\n\n    const getPointFromMouseEvent = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            if (!isCursorInRect(margin.left, margin.top, innerWidth, innerHeight, x, y)) return null\n\n            const pointIndex = delaunay.find(x - margin.left, y - margin.top)\n            return points[pointIndex]\n        },\n        [canvasEl, margin, innerWidth, innerHeight, delaunay]\n    )\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            const point = getPointFromMouseEvent(event)\n            setCurrentPoint(point)\n\n            if (point) {\n                showTooltipFromEvent(createElement(tooltip, { point }), event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [getPointFromMouseEvent, setCurrentPoint, showTooltipFromEvent, hideTooltip, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrentPoint(null)\n            currentPoint && onMouseLeave && onMouseLeave(currentPoint, event)\n        },\n        [hideTooltip, setCurrentPoint, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            if (onClick) {\n                const point = getPointFromMouseEvent(event)\n                point && onClick(point, event)\n            }\n        },\n        [getPointFromMouseEvent, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nLineCanvas.propTypes = LineCanvasPropTypes\nLineCanvas.defaultProps = LineCanvasDefaultProps\n\nconst LineCanvasWithContainer = withContainer(LineCanvas)\n\nexport default forwardRef((props, ref) => <LineCanvasWithContainer {...props} canvasRef={ref} />)\n","import { Delaunay, Voronoi } from 'd3-delaunay'\n\nexport const renderVoronoiToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    voronoi: Voronoi<Delaunay.Point>\n) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.75\n    ctx.beginPath()\n    voronoi.render(ctx)\n    ctx.strokeStyle = 'red'\n    ctx.lineWidth = 1\n    ctx.stroke()\n\n    ctx.restore()\n}\n\nexport const renderVoronoiCellToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    voronoi: Voronoi<Delaunay.Point>,\n    index: number\n) => {\n    ctx.save()\n\n    ctx.globalAlpha = 0.35\n    ctx.beginPath()\n    voronoi.renderCell(index, ctx)\n    ctx.fillStyle = 'red'\n    ctx.fill()\n\n    ctx.restore()\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport LineCanvas from './LineCanvas'\n\nconst ResponsiveLineCanvas = (props, ref) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <LineCanvas width={width} height={height} {...props} ref={ref} />}\n    </ResponsiveWrapper>\n)\n\nexport default forwardRef(ResponsiveLineCanvas)\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n"],"names":["EPSILON","Math","pow","EDGE_STACK","Uint32Array","Delaunator","coords","n","length","Error","this","maxTriangles","max","_triangles","_halfedges","Int32Array","_hashSize","ceil","sqrt","_hullPrev","_hullNext","_hullTri","_hullHash","fill","_ids","_dists","Float64Array","update","hullPrev","hullNext","hullTri","hullHash","minX","Infinity","minY","maxX","maxY","i","x","y","i0","i1","i2","cx","cy","minDist","d","dist","i0x","i0y","i1x","i1y","minRadius","r","circumradius","i2x","i2y","quicksort","hull","j","d0","id","subarray","triangles","halfedges","orient","center","ax","ay","bx","by","dx","dy","ex","ey","bl","cl","circumcenter","_cx","_cy","_hullStart","hullSize","_hashKey","trianglesLen","_addTriangle","xp","yp","k","abs","start","key","e","q","t","_legalize","floor","p","pseudoAngle","a","ar","b","a0","b0","al","p0","pr","pl","p1","inCircle","hbl","_link","br","c","points","getX","defaultGetX","getY","defaultGetY","orientIfSure","px","py","rx","ry","qx","qy","l","fx","fy","bp","cp","ids","dists","left","right","temp","tempDist","swap","arr","tmp","epsilon","Path","_x0","_y0","_x1","_y1","_","x0","y0","w","h","Polygon","push","slice","Voronoi","delaunay","xmin","ymin","xmax","ymax","_circumcenters","vectors","_init","circumcenters","t1","t2","t3","x1","y1","x2","y2","x3","y3","ab","context","buffer","undefined","inedges","ti","tj","xi","yi","xj","yj","_renderSegment","h0","h1","v","_project","value","rect","_clip","moveTo","lineTo","closePath","cell","cellPolygon","index","polygon","renderCell","S","c0","_regioncode","c1","_clipSegment","_step","ci","neighbors","cj","ai","li","aj","lj","e0","_cell","V","_clipInfinite","_clipFinite","e1","P","sx0","sy0","sx1","sy1","_edgecode","_edge","contains","vx0","vy0","vxn","vyn","Array","from","unshift","splice","vx","vy","flatIterable","tau","PI","pointX","pointY","jitter","sin","cos","Delaunay","_delaunator","_hullIndex","collinear","sort","f","bounds","hypot","hullIndex","indexOf","dc","dt","renderHull","arc","t0","trianglePolygon","renderTriangle","that","flatArray","array","call","getAccessor","directive","datum","useVoronoiMesh","width","height","debug","points2d","useMemo","map","point","computeMeshPoints","voronoi","computeMesh","Mesh","nodes","onMouseEnter","onMouseMove","onMouseLeave","onClick","elementRef","useRef","useState","currentIndex","setCurrentIndex","voronoiPath","render","getIndexAndNodeFromEvent","useCallback","event","current","getRelativeCursor","find","handleMouseEnter","node","handleMouseMove","handleMouseLeave","previousNode","handleClick","_jsxs","ref","_jsx","stroke","strokeWidth","opacity","style","cursor","LinePointTooltip","BasicTooltip","data","xFormatted","yFormatted","enableChip","color","serieColor","propTypes","PropTypes","memo","SliceTooltip","axis","theme","useTheme","otherAxis","TableTooltip","rows","Chip","tooltip","chip","serieId","tableCellValue","isRequired","commonPropTypes","Date","xScale","xFormat","yScale","yFormat","layers","curve","lineCurvePropType","axisTop","axisPropType","axisRight","axisBottom","axisLeft","enableGridX","enableGridY","gridXValues","gridYValues","enablePoints","pointSymbol","pointSize","pointColor","pointBorderWidth","pointBorderColor","enablePointLabel","pointLabel","markers","colors","ordinalColorsPropType","enableArea","areaOpacity","areaBlendMode","blendModePropType","areaBaselineValue","lineWidth","legends","LegendPropShape","isInteractive","debugMesh","enableSlices","debugSlices","sliceTooltip","enableCrosshair","crosshairType","LinePropTypes","role","useMesh","motionPropTypes","defsPropTypes","LineCanvasPropTypes","pixelRatio","commonDefaultProps","type","min","scheme","PointTooltip","LineDefaultProps","animate","motionConfig","defs","LineCanvasDefaultProps","window","devicePixelRatio","useLineGenerator","line","defined","curveFromProp","useAreaGenerator","area","useLine","xScaleSpec","yScaleSpec","enableSlicesTooltip","formatX","useValueFormatter","formatY","getColor","useOrdinalColorScale","getPointColor","useInheritedColor","getPointBorderColor","hiddenIds","setHiddenIds","computeXYScalesForSeries","filter","item","rawSeries","series","dataWithColor","label","serie","Boolean","legendData","hidden","reverse","toggleSerie","state","reduce","acc","position","borderColor","slices","Map","forEach","has","get","set","entries","slicePoints","prevSlice","nextSlice","sliceHeight","useSlices","lineGenerator","areaGenerator","AreaPath","path","useMotionConfig","springConfig","config","animatedPath","useAnimatedPath","animatedProps","useSpring","immediate","animated","fillOpacity","mixBlendMode","Areas","computedLines","lines","LinesItem","thickness","Lines","SlicesItem","isCurrent","setCurrent","useTooltip","showTooltipFromEvent","hideTooltip","createElement","strokeOpacity","Slices","Points","symbol","size","borderWidth","enableLabel","labelYOffset","getLabel","getLabelGenerator","mappedPoints","DotsItem","margin","showTooltipAt","top","BaseMesh","Line","props","partialMargin","pointLabelYOffset","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","currentPoint","setCurrentPoint","currentSlice","setCurrentSlice","layerById","grid","Grid","xValues","yValues","CartesianMarkers","axes","Axes","bottom","areas","crosshair","mesh","legend","BoxLegendSvg","containerWidth","containerHeight","boundDefs","bindDefs","Crosshair","SvgWrapper","layer","Fragment","defaultProps","withContainer","ResponsiveLine","ResponsiveWrapper","LineCanvas","canvasRef","canvasEl","$","useEffect","ctx","getContext","scale","fillStyle","background","fillRect","translate","strokeStyle","renderGridLinesToCanvas","values","renderAxesToCanvas","save","globalAlpha","beginPath","restore","renderVoronoiToCanvas","renderVoronoiCellToCanvas","renderLegendToCanvas","getPointFromMouseEvent","isCursorInRect","pointIndex","handleMouseHover","LineCanvasWithContainer","forwardRef","pi","tauEpsilon","prototype","constructor","quadraticCurveTo","bezierCurveTo","arcTo","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","tan","acos","t01","t21","a1","ccw","cw","da","toString","constant","curveLinear","output","defined0","x0z","y0z","areaStart","lineStart","lineEnd","areaEnd","arealine","arguments","lineX0","lineY0","lineY1","lineX1"],"sourceRoot":""}